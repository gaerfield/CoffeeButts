/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package de.kramhal.coffeebutts.web

import de.kramhal.coffeebutts.infrastructure.EventBus
import de.kramhal.coffeebutts.model.*
import de.kramhal.coffeebutts.model.FrontDesk
import de.kramhal.coffeebutts.model.Order
import de.kramhal.coffeebutts.repositories.OrderRepository
import kotlinx.coroutines.reactive.asFlow
import kotlinx.coroutines.reactive.awaitSingle
import org.springframework.http.HttpStatus
import org.springframework.web.bind.annotation.*

@RestController
@RequestMapping("/coffee")
internal class CoffeeOrderingService(
        private val frontDesk: FrontDesk
) {

    data class OrderCoffee(val type: List<Coffee.Type>)

    @PostMapping("/orders")
    @ResponseStatus(HttpStatus.CREATED)
    suspend fun placeOrder(@RequestBody order: OrderCoffee) =
            frontDesk.placeOrder(order.type)


//    @GetMapping("/orders")
//    suspend fun allOrders() =
//            orderRepository.findAll().asFlow()
//
//    @GetMapping("/orders/{id}")
//    suspend fun byId(@PathVariable id: OrderId) =
//            orderRepository.findById(id).awaitSingle()
}