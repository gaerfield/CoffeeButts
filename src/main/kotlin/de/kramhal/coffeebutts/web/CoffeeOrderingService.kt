/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package de.kramhal.coffeebutts.web

import de.kramhal.coffeebutts.model.Coffee
import de.kramhal.coffeebutts.model.Order
import de.kramhal.coffeebutts.repositories.OrderRepository
import kotlinx.coroutines.reactive.asFlow
import kotlinx.coroutines.reactive.awaitSingle
import org.springframework.http.HttpStatus
import org.springframework.web.bind.annotation.*

@RestController
@RequestMapping("/coffee")
internal class CoffeeOrderingService(
        private val orderRepository: OrderRepository
) {

    data class CoffeeOrder(val type: Coffee.Type = Coffee.Type.Cappucino)

    @PostMapping("/orders")
    @ResponseStatus(HttpStatus.CREATED)
    suspend fun placeOrder(@RequestBody order: CoffeeOrder) =
        orderRepository.save(Order(Coffee(order.type))).awaitSingle().id


    @GetMapping("/orders")
    suspend fun allOrders() =
            orderRepository.findAll().asFlow()

    @GetMapping("/orders/{id}")
    suspend fun byId(@PathVariable id: String) =
            orderRepository.findById(id).awaitSingle()
}